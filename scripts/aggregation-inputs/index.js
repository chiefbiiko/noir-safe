import { compile, createFileManager } from '@noir-lang/noir_wasm';
import { BarretenbergBackend } from '@noir-lang/backend_barretenberg';
import { Noir } from "@noir-lang/noir_js"
import { join } from "path"
import { cpus } from 'os'

const threads = cpus() // browser::navigator::hardwareConcurrency

const spPath = join(import.meta.dirname, "../..", "circuits/storage-proof")
// const apPath = join(import.meta.dirname, "../..", "circuits/account-proof")
// const anchorPath = join(import.meta.dirname, "../..", "circuits/anchor")

const spMeta = await compile(createFileManager(spPath));
// const apMeta = await compile(createFileManager(apPath));
// const anchorMeta = await compile(createFileManager(anchorPath));

const spBackend = new BarretenbergBackend(spMeta.program, { threads })
// const apBackend = new BarretenbergBackend(apMeta.program, { threads })
// const anchorBackend = new BarretenbergBackend(anchorMeta.program, { threads })
//WIP
const spNoir = new Noir(spMeta.program, spBackend)
const { witness: spWitness } = await spNoir.execute({
    storage_root: [47, 145, 156, 11, 102, 32, 161, 134, 242, 27, 22, 214, 31, 61, 143, 64, 68, 15, 191, 177, 1, 14, 139, 176, 0, 26, 69, 107, 27, 91, 245, 25], //TODO
    storage_key: [143, 194, 65, 183, 234, 249, 41, 244, 197, 179, 245, 189, 1, 171, 189, 194, 204, 97, 54, 138, 195, 194, 204, 169, 162, 141, 93, 65, 13, 64, 73, 213], //TODO
    storage_proof_depth: 3, //TODO
    //TODO
    storage_proof: [249, 1, 49, 160, 202, 28, 7, 64, 109, 103, 141, 185, 123, 169, 191, 33, 214, 166, 94, 22, 159, 127, 149, 82, 35, 136, 47, 69, 83, 231, 97, 85, 190, 65, 138, 59, 160, 125, 122, 253, 43, 165, 173, 76, 112, 133, 105, 156, 117, 5, 207, 156, 182, 126, 160, 116, 183, 17, 108, 123, 32, 115, 245, 103, 54, 73, 142, 82, 208, 160, 193, 120, 15, 171, 65, 94, 54, 19, 173, 84, 231, 107, 29, 254, 40, 98, 201, 32, 243, 138, 246, 64, 52, 30, 158, 255, 253, 104, 221, 246, 249, 232, 128, 128, 128, 160, 70, 22, 68, 78, 204, 104, 253, 96, 197, 138, 55, 5, 163, 219, 215, 161, 120, 175, 141, 191, 80, 226, 190, 38, 191, 155, 46, 148, 232, 157, 180, 163, 160, 38, 231, 50, 184, 130, 64, 140, 215, 185, 227, 158, 215, 6, 153, 45, 5, 38, 240, 214, 1, 147, 246, 102, 24, 17, 36, 232, 7, 186, 255, 109, 127, 160, 101, 18, 71, 49, 40, 235, 47, 75, 104, 15, 220, 253, 126, 61, 5, 236, 10, 217, 189, 204, 191, 225, 13, 190, 160, 232, 81, 153, 69, 206, 141, 247, 128, 160, 44, 217, 168, 249, 194, 110, 42, 88, 29, 232, 144, 181, 11, 56, 116, 119, 116, 140, 105, 215, 221, 203, 171, 132, 236, 40, 14, 32, 29, 237, 123, 73, 128, 160, 185, 43, 188, 252, 172, 173, 59, 131, 59, 77, 42, 73, 147, 6, 154, 243, 101, 184, 174, 31, 185, 74, 190, 92, 211, 248, 157, 151, 238, 145, 20, 98, 160, 240, 190, 50, 98, 149, 0, 88, 160, 59, 197, 71, 198, 102, 19, 94, 25, 92, 145, 8, 241, 35, 222, 129, 17, 34, 111, 89, 56, 251, 223, 174, 141, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 81, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 160, 248, 110, 66, 8, 95, 101, 101, 3, 201, 138, 114, 58, 73, 13, 56, 133, 110, 250, 202, 34, 134, 146, 57, 197, 1, 115, 204, 202, 31, 64, 36, 18, 128, 128, 128, 160, 1, 165, 175, 247, 25, 31, 219, 112, 249, 35, 54, 173, 219, 194, 101, 144, 109, 15, 87, 198, 199, 24, 190, 212, 33, 153, 174, 178, 194, 58, 74, 229, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 226, 160, 32, 26, 154, 110, 192, 103, 35, 66, 82, 252, 35, 215, 69, 221, 139, 207, 3, 231, 62, 137, 95, 67, 116, 132, 95, 61, 198, 95, 171, 93, 212, 112, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
})
console.log("spWitness", spWitness)
const { proof: spProof, publicInputs: spPi } = await spBackend.generateProof(spWitness)
const spArtifacts = await spBackend.generateRecursiveProofArtifacts( { publicInputs: spPi, proof: spProof }, spPi.length)
// spArtifacts { proofAsFields, vkAsFields, vkHash }


// const apNoir = new Noir(apMeta.program, apBackend)
// const { witness: apWitness } = await apNoir.execute({
//     safe_address: "TODO",
//     state_root: "TODO",
//     account_proof_depth: "TODO",
//     padded_account_value: "TODO",
//     account_proof: "TODO",
// })
